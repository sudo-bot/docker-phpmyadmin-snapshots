name: Build on snapshot changed

permissions:
    contents: write

on:
    repository_dispatch:
        types: run-cron
    workflow_dispatch:
    schedule:
        - cron: "*/30 * * * *"

jobs:
    run-cron:
        name: Build on snapshot changed
        environment:
            name: Trigger snapshot update
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                include:
                    - { version-range: "5.2", pre-release: false, is-latest: true }
                    - { version-range: "5.3", pre-release: true, is-latest: false }
        steps:
            - name: Fetch hash file
              run: "curl -o snapshot.json -H 'User-Agent: phpmyadmin-snapshot-updater (+https://github.com/sudo-bot/docker-phpmyadmin-snapshots; williamdes@wdes.fr)' -s https://files.phpmyadmin.net/snapshots/phpMyAdmin-${{ matrix.version-range }}+snapshot.json"
            - uses: actions/cache@v3
              id: cache
              with:
                  path: snapshot.json
                  key: snapshot-${{ matrix.version-range }}.x-${{ hashFiles('**/snapshot.json') }}
            - name: Commit to variable
              if: steps.cache.outputs.cache-hit != 'true'
              run: echo "snapshot_commit=$(jq -r '.commit' ./snapshot.json)" >> $GITHUB_ENV
            - name: Date to variable
              if: steps.cache.outputs.cache-hit != 'true'
              run: echo "snapshot_date=$(jq -r '.date' ./snapshot.json)" >> $GITHUB_ENV
            - name: Checkout repository
              if: steps.cache.outputs.cache-hit != 'true'
              uses: actions/checkout@v3
              with:
                fetch-depth: 1
                ref: 'main'
                path: repo
            - name: Import GPG key
              if: steps.cache.outputs.cache-hit != 'true'
              # v5.2.0 - 111c56156bcc6918c056dbef52164cfa583dc549
              uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549
              with:
                  gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
                  passphrase: ${{ secrets.GPG_PASSPHRASE }}
                  git_user_signingkey: true
                  git_commit_gpgsign: true
                  workdir: ./repo
            - name: Trigger a build for ${{ matrix.version-range }}
              if: steps.cache.outputs.cache-hit != 'true'
              working-directory: ./repo
              id: create-release
              run: ./make-release.sh --env=${{ matrix.version-range }} -p
            - name: Create a Release
              if: steps.cache.outputs.cache-hit != 'true'
              working-directory: ./repo
              run: ./create-github-release.sh "${{ matrix.version-range }}" "${{ matrix.pre-release }}"
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
                  TAG_NAME: ${{ steps.create-release.outputs.TAG_NAME }}
                  NAME: ${{ matrix.version-range }} series
                  BODY: "Updated ${{ matrix.version-range }} series to https://github.com/phpmyadmin/phpmyadmin/commit/${{ env.snapshot_commit }} built on ${{ env.snapshot_date }}"
                  PRE_RELEASE: ${{ matrix.pre-release }}
                  MAKE_LATEST: ${{ matrix.is-latest }}
                  REPO_OWNER: ${{ github.repository_owner }}
                  REPO_NAME: ${{ github.event.repository.name }}
            - name: Set the summary
              if: steps.cache.outputs.cache-hit != 'true'
              run: echo "Updated ${{ matrix.version-range }} to https://github.com/phpmyadmin/phpmyadmin/commit/${{ env.snapshot_commit }} built on ${{ env.snapshot_date }}" >> $GITHUB_STEP_SUMMARY
